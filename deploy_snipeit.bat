@echo off
setlocal

:: ============================================================================
:: Snipe-IT 一键部署脚本 (Windows)
::
:: 功能:
:: 1. 检查 Git 和 Docker 是否已安装并运行。
:: 2. 如果 .env 文件不存在，则根据本地环境自动创建。
:: 3. 使用自定义的 Dockerfile 构建并启动所有服务。
:: 4. 清理应用缓存以确保所有配置生效。
:: ============================================================================

echo.
echo ====================================
echo      Snipe-IT 一键部署脚本
echo ====================================
echo.

:: --- 环境检查 ---
echo [1/5] 正在检查环境...

:check_git
echo      - 正在检查 Git...
where git >nul 2>nul
if %errorlevel% neq 0 (
    echo      错误: 未找到 Git。请先安装 Git 并确保其在系统的 PATH 环境变量中。
    goto :eof
)
echo      - Git 已安装。

:check_docker
echo      - 正在检查 Docker...
where docker >nul 2>nul
if %errorlevel% neq 0 (
    echo      错误: 未找到 Docker。请先安装 Docker Desktop。
    goto :eof
)
echo      - Docker 已安装。

:check_docker_running
echo      - 正在检查 Docker 服务状态...
docker info >nul 2>nul
if %errorlevel% neq 0 (
    echo      错误: Docker Desktop 未在运行或未响应。
    echo      请先启动 Docker Desktop，并确保它已切换到 Linux 容器模式。
    goto :eof
)
echo      - Docker 服务正在运行。
echo.

:: --- 创建 .env 文件 ---
echo [2/5] 正在检查并创建 .env 配置文件...
if exist .env (
    echo      - .env 文件已存在，跳过创建。
) else (
    echo      - .env 文件不存在，正在为您创建...
    (
        echo # Auto-generated by deploy_snipeit.bat for local Docker environment
        echo APP_ENV=development
        echo APP_DEBUG=true
        echo APP_KEY=base64:tQp/IFsfrhK5eLh3kI/y0Ie2Ld5pA9aT7CqLdI3iJcE=
        echo APP_URL=http://localhost:8000
        echo APP_TIMEZONE='UTC'
        echo APP_LOCALE='zh-CN'
        echo.
        echo DB_CONNECTION=mysql
        echo DB_HOST=db
        echo DB_PORT=3306
        echo DB_DATABASE=snipeit
        echo DB_USERNAME=snipeit
        echo DB_PASSWORD=snipeit
        echo MYSQL_ROOT_PASSWORD=snipeit_root_password
        echo.
        echo MAIL_MAILER=log
        echo MAIL_HOST=localhost
        echo MAIL_PORT=1025
        echo MAIL_USERNAME=null
        echo MAIL_PASSWORD=null
        echo MAIL_FROM_ADDR=deploy_script@example.com
        echo MAIL_FROM_NAME='Snipe-IT'
        echo MAIL_REPLYTO_ADDR=deploy_script@example.com
        echo.
        echo IMAGE_LIB=gd
    ) > .env
    echo      - .env 文件创建成功。
)
echo.

:: --- 启动 Docker 服务 ---
echo [3/5] 正在使用 Docker Compose 构建并启动服务...
echo      这可能会花费很长时间，特别是首次构建时，请耐心等待。
docker-compose up -d --build
if %errorlevel% neq 0 (
    echo.
    echo      错误: Docker Compose 构建或启动失败!
    echo      请检查 Docker 的日志输出以获取详细错误信息。
    echo      常见的错误原因包括网络问题或 Docker 资源不足。
    goto :eof
)
echo      - Docker 服务已成功启动。
echo.

:: --- 清理配置缓存 ---
echo [4/5] 正在清理应用配置缓存...
docker-compose exec app php artisan config:clear
if %errorlevel% neq 0 (
    echo.
    echo      警告: 清理配置缓存失败。应用可能不会立即加载最新配置。
    echo      可以稍后手动执行 'docker-compose exec app php artisan config:clear'。
) else (
    echo      - 配置缓存已成功清除。
)
echo.


:: --- 完成 ---
echo [5/5] 部署完成!
echo.
echo =====================================================
echo          部署成功!
echo =====================================================
echo.
echo 你现在可以访问 Snipe-IT:
echo.
echo   - Snipe-IT 应用: http://localhost:8000
echo.
echo 首次访问时，请按照 "Pre-Flight Check" 页面的指引完成最后的安装步骤。
echo 详细信息请参考 DEPLOYMENT_GUIDE_CN.md
echo.

endlocal
pause
