@echo off
setlocal

:: ============================================================================
:: Snipe-IT One-Click Deployment Script (Windows)
::
:: This script will:
:: 1. Check for Git and Docker dependencies.
:: 2. Create a .env file from the template if it doesn't exist.
:: 3. Build and start all services using the custom Dockerfile.
:: 4. Clear the application cache to ensure all settings are loaded.
:: ============================================================================

echo.
echo ==========================================
echo      Snipe-IT One-Click Deployment
echo ==========================================
echo.

:: --- Environment Checks ---
echo [1/5] Checking environment...

:check_git
echo      - Checking for Git...
where git >nul 2>nul
if %errorlevel% neq 0 (
    echo      ERROR: Git not found. Please install Git and ensure it's in your system's PATH.
    goto :eof
)
echo      - Git is installed.

:check_docker
echo      - Checking for Docker...
where docker >nul 2>nul
if %errorlevel% neq 0 (
    echo      ERROR: Docker not found. Please install Docker Desktop.
    goto :eof
)
echo      - Docker is installed.

:check_docker_running
echo      - Checking Docker service status...
docker info >nul 2>nul
if %errorlevel% neq 0 (
    echo      ERROR: Docker Desktop is not running or not responding.
    echo      Please start Docker Desktop and ensure it's in Linux container mode.
    goto :eof
)
echo      - Docker service is running.
echo.

:: --- Create .env file ---
echo [2/5] Checking for .env configuration file...
if exist .env (
    echo      - .env file already exists. Skipping creation.
) else (
    echo      - .env file not found. Creating it for you...
    (
        echo # Auto-generated by deploy_snipeit.bat for local Docker environment
        echo APP_ENV=development
        echo APP_DEBUG=true
        echo APP_KEY=base64:tQp/IFsfrhK5eLh3kI/y0Ie2Ld5pA9aT7CqLdI3iJcE=
        echo APP_URL=http://localhost:8000
        echo APP_TIMEZONE='UTC'
        echo APP_LOCALE='zh-CN'
        echo.
        echo DB_CONNECTION=mysql
        echo DB_HOST=db
        echo DB_PORT=3306
        echo DB_DATABASE=snipeit
        echo DB_USERNAME=snipeit
        echo DB_PASSWORD=snipeit
        echo MYSQL_ROOT_PASSWORD=snipeit_root_password
        echo.
        echo MAIL_MAILER=log
        echo MAIL_HOST=localhost
        echo MAIL_PORT=1025
        echo MAIL_USERNAME=null
        echo MAIL_PASSWORD=null
        echo MAIL_FROM_ADDR=deploy_script@example.com
        echo MAIL_FROM_NAME='Snipe-IT'
        echo MAIL_REPLYTO_ADDR=deploy_script@example.com
        echo.
        echo IMAGE_LIB=gd
    ) > .env
    echo      - .env file created successfully.
)
echo.

:: --- Start Docker Services ---
echo [3/5] Building and starting services with Docker Compose...
echo      This may take a long time, especially on the first run. Please be patient.
docker-compose up -d --build
if %errorlevel% neq 0 (
    echo.
    echo      ERROR: Docker Compose failed to build or start!
    echo      Please check the Docker logs for detailed error messages.
    echo      Common causes include network issues or insufficient Docker resources.
    goto :eof
)
echo      - Docker services started successfully.
echo.

:: --- Clear Config Cache ---
echo [4/5] Clearing application config cache...
docker-compose exec app php artisan config:clear
if %errorlevel% neq 0 (
    echo.
    echo      WARNING: Failed to clear config cache. The app might not load the latest settings.
    echo      You can try running 'docker-compose exec app php artisan config:clear' manually later.
) else (
    echo      - Config cache cleared successfully.
)
echo.


:: --- Done ---
echo [5/5] Deployment finished!
echo.
echo =====================================================
echo          DEPLOYMENT SUCCESSFUL
echo =====================================================
echo.
echo You can now access Snipe-IT at:
echo.
echo   - Snipe-IT Application: http://localhost:8000
echo.
echo On your first visit, follow the "Pre-Flight Check" instructions to complete the setup.
echo For more details, please see DEPLOYMENT_GUIDE_CN.md
echo.

endlocal
pause